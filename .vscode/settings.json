{
  "files.autoGuessEncoding": true,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1000,
  "files.encoding": "utf8",
  //"[cpp]" : {"files.encoding": "big5hkscs",},
  //"[java]": {"files.encoding": "big5hkscs",},
  //"[sql]" : {"files.encoding": "big5hkscs",},
  "files.exclude": 
    {
      "**/node_modules": true,
      // "**/..*": true,
    },
  "files.associations": 
    {
      "*.input": "txt",
      "*.output": "txt",
      "*.c": "c",
      "*.h": "cpp",
      "*.cpp": "cpp",
      "*.cxx": "cpp",
      "*.tcc": "cpp",
      "*.idl": "cpp",
      "*.libc": "c",
      "*.libcpp": "cpp",
      "*.C-Libary": "cpp",
      "*.Cpp-Libary": "cpp",
      "*.java": "java",
      "*.py": "python",
      "*.ipynb": "jupyter",
      "*.go": "go",
      "*.js": "javascript",
      "*.ts": "typescript",
      "*.ps1": "powershell",
      "*.s": "gccasm",
      "*.asm": "asm-collection",
      "*.inc": "asm-collection",
      "*.json": "jsonc",
      "*.jsonc": "jsonc",
      "readme": "markdown",
    },
  "search.exclude": 
    {
      "**/node_modules": true,
      "**/..Resources": true,
    },
  "editor.formatOnType": false, 
  "editor.formatOnSave": false,
  "editor.formatOnPaste": false,
  "editor.insertSpaces": true,
  "editor.renderWhitespace": "all",
  "editor.detectIndentation": true,
  "editor.tabSize": 2,
  "editor.snippetSuggestions": "top",
  "editor.minimap.showSlider": "always",
  "editor.minimap.side": "right",
  "editor.minimap.size": "proportional",
  "editor.showUnused": true,
  "editor.wordBasedSuggestions": true,
  "editor.guides.indentation": true,
  "editor.multiCursorPaste": "full",
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": 
    {
      // parent: the main file of the group
      // sub: subfile for the group
      //  ${capture} : parsed value matching '*' in parent pattern
      //  ${basename}: matches the base filename of the parent file, e.g. 'file' in file.ts
      //  ${extname} : matches the extension of the parent file, e.g. 'ts' in file.ts
      //  ${dirname} : the directory name that matches the parent file, 'src' in src/file.ts
      //  *          : matches any string, each subpattern can only be used once
      "main.asm"  : "main.asm,  main.obj, main.exe",
      "main.c"    : "main.c,    main.obj, main.exe",
      "main.cpp"  : "main.cpp,  main.obj, main.exe, main.input, main.output",
      "main.java" : "main.java, main.class, ",
      "index.html"  : "index.html, index.js, index.ts, index.jsx, index.tsx, index.css",
      "*.asm": "${capture}.asm, ${capture}.*.asm, ${capture}_*.asm, ${capture}-*.asm, ${capture}.lst, ${capture}.obj, ${capture}.lib, ${capture}.exe", 
      "*.c": "${capture}.c, ${capture}.*.c, ${capture}_*.c, ${capture}-*.c", 
      "*.cpp": "${capture}.cpp, ${capture}.*.cpp, ${capture}_*.cpp, ${capture}-*.cpp", 
      "*.h":   "${capture}.c, ${capture}.*.c, ${capture}_*.c, ${capture}-*.c, ${capture}.h, ${capture}.*.h, ${capture}_*.h, ${capture}-*.h, ${capture}.obj, ${capture}.*.obj, ${capture}_*.obj, ${capture}-*.obj",
      "*.hpp": "${capture}.cpp, ${capture}.*.cpp, ${capture}_*.cpp, ${capture}-*.cpp, ${capture}.hpp, ${capture}.*.hpp, ${capture}_*.hpp, ${capture}-*.hpp, ${capture}.obj, ${capture}.*.obj, ${capture}_*.obj, ${capture}-*.obj",
      "*.js": "${capture}.js, ${capture}.css, ${capture}.*.css",
      "*.jsx": "${capture}.jsx, ${capture}.css, ${capture}.*.css",
      "*.ts": "${capture}.js",
      "*.tsx": "${capture}.tsx",
      "tsconfig.json": "tsconfig.*.json",
      "package.json": "package.json, package-lock.json, package-*.json, package.*.json, yarn.lock, pnpm-lock.yaml",
      "settings.json": "*.json",
      "Snippet.code-snippets": "*.code-snippets",
    },
  //code-runner
    "code-runner.runInTerminal": true,
    "code-runner.showExecutionMessage": true,
    "code-runner.showRunCommandInEditorContextMenu": true,
    "code-runner.showRunCommandInExplorerContextMenu": true,
    "code-runner.showRunIconInEditorTitleMenu": true,
    "code-runner.saveFileBeforeRun": true, 
    "code-runner.preserveFocus": true, 
    "code-runner.clearPreviousOutput": false,
  // Assembler
    "asm-code-lens.donated": true,
    "asm-code-lens.enableCodeLenses": false,
    "asm-code-lens.enableCompletions": true,
    "asm-code-lens.enableHovering": true,
    "asm-code-lens.comments.toggleLineCommentPrefix": ";",
  // CCpp
    //"clang.executable" : "D:\\Studio\\Programming\\Libary\\CCpp\\LLVM+MinGW\\bin\\clang.exe",
    //"clang.completion.enable": true,
    //"clangd.path": "clangd",
    //"C_Cpp.clang_format_sortIncludes": true,
    "C_Cpp.dimInactiveRegions": true,  
    "C_Cpp.suggestSnippets": true,
    "C_Cpp.loggingLevel": "Information",
    "C_Cpp.preferredPathSeparator": "Forward Slash",
    // "C_Cpp.errorSquiggles": "Disabled", 
    "C_Cpp.autoAddFileAssociations": false,
    "C_Cpp.autocompleteAddParentheses": true,
    // "C_Cpp.autocomplete": "Disabled",
    // "C_Cpp.enhancedColorization": "Enabled",
    // "C_Cpp.intelliSenseEngine": "Default", 
    "C_Cpp.intelliSenseCacheSize": 0,
    // "C_Cpp.intelliSenseEngineFallback": "Enabled",
    //"C_Cpp.default.compilerPath": "C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx64/x64/cl.exe",
    //"C_Cpp.default.compileCommands": "",
    "C_Cpp.default.cppStandard": "c++17",
    "C_Cpp.default.cStandard": "c17",
    // "C_Cpp": "leftmostColumn",
    "C_Cpp.default.windowsSdkVersion": "10.0.19041.0",
    "C_Cpp.default.intelliSenseMode": "windows-msvc-x64", 
    // "C_Cpp.default.includePath": 
    //   [
    //     //"${default}",
    //     "${workspaceFolder}\\Libary\\CCpp\\LLVM+MinGW\\include",
    //     "${workspaceFolder}\\Libary\\CCpp\\LLVM+MinGW\\lib",
    //     "${workspaceFolder}\\Libary\\CCpp\\LLVM+MinGW\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\include",
    //     "${workspaceFolder}\\Libary\\CCpp\\LLVM+MinGW\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\include\\c++",
    //     "${workspaceFolder}\\Libary\\CCpp\\LLVM+MinGW\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\include\\c++\\x86_64-w64-mingw32",
    //     "${workspaceFolder}\\Libary\\CCpp\\LLVM+MinGW\\x86_64-w64-mingw32\\include",
    //     "${workspaceFolder}\\Libary\\CCpp\\LLVM+MinGW\\x86_64-w64-mingw32\\lib",
    //     "${workspaceFolder}\\Libary\\CCpp\\MinGW\\include",
    //     "${workspaceFolder}\\Libary\\CCpp\\MinGW\\lib",
    //     "${workspaceFolder}\\Libary\\CCpp\\MinGW\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\include",
    //     "${workspaceFolder}\\Libary\\CCpp\\MinGW\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\include\\c++",
    //     "${workspaceFolder}\\Libary\\CCpp\\MinGW\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\include\\c++\\x86_64-w64-mingw32",
    //     "${workspaceFolder}\\Libary\\CCpp\\MinGW\\x86_64-w64-mingw32\\include",
    //     "${workspaceFolder}\\Libary\\CCpp\\MinGW\\x86_64-w64-mingw32\\lib",
    //     "${}\\include",
    //     "${}\\lib",
    //     "${}\\lib\\gcc\\x86_64-w64-mingw32\\${}\\include",
    //     "${}\\lib\\gcc\\x86_64-w64-mingw32\\${}\\include\\c++",
    //     "${}\\lib\\gcc\\x86_64-w64-mingw32\\${}\\include\\c++",
    //     "${}\\lib\\gcc\\x86_64-w64-mingw32\\${}\\include\\c++\\x86_64-w64-mingw32",
    //     "${}\\x86_64-w64-mingw32\\include",
    //     "${}\\x86_64-w64-mingw32\\lib",
    //   ],
    "C_Cpp.default.browse.path": ["${workspaceFolder}","${fileDirname}"],
    "C_Cpp.default.defines": ["_DEBUG","UNICODE","_UNICODE"],
    "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: GNU, IndentWidth: 2, ColumnLimit: 0}",
    "C_Cpp_Config.cCompilerPath": "gcc",
    "C_Cpp_Config.cppCompilerPath": "g++",
  // Java
    "java.errors.incompleteClasspath.severity": "ignore",
    "java.configuration.updateBuildConfiguration": "disabled",
  // Python
    //"python.pythonPath": "C:\\Program Files\\Python39\\python.exe",
    "jupyter.jupyterServerType": "local",
  // JavaScript
  // TypeScript
  // Go
  // Powershell
    //"powershell.codeFormatting.addWhitespaceAroundPipe": true,
  // HTML
    "previewServer.browsers": ["chrome"],
    "previewServer.ignoreNotification": true,
    "previewServer.isWatchConfiguration": true,
    "lldb.displayFormat": "hex",
    "lldb.showDisassembly": "auto",
    "lldb.dereferencePointers": true,
    "lldb.consoleMode": "commands",
    "livePreview.defaultPreviewPath": "/Project/WebFrontEnd-Template/ArticleMessage/ArticleMessage202302180200.html",
  // Microsoft Azure
    //"appService.defaultWebAppToDeploy": "None"
}